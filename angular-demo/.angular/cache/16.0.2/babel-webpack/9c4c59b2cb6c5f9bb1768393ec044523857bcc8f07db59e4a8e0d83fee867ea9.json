{"ast":null,"code":"/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\nexport class ModuloPlugin extends FunctionPlugin {\n  mod(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('MOD'), (dividend, divisor) => {\n      if (divisor === 0) {\n        return new CellError(ErrorType.DIV_BY_ZERO);\n      } else {\n        return dividend % divisor;\n      }\n    });\n  }\n}\nModuloPlugin.implementedFunctions = {\n  'MOD': {\n    method: 'mod',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER\n    }, {\n      argumentType: FunctionArgumentType.NUMBER\n    }]\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
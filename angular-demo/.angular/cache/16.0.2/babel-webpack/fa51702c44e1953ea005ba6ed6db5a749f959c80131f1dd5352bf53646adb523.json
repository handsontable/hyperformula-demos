{"ast":null,"code":"/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { ErrorMessage } from '../../error-message';\nimport { FunctionPlugin } from '../index';\nimport { FunctionArgumentType } from './FunctionPlugin';\nexport class FormulaTextPlugin extends FunctionPlugin {\n  /**\r\n   * Corresponds to FORMULATEXT(value)\r\n   *\r\n   * Returns a formula in a given cell as a string.\r\n   *\r\n   * @param ast\r\n   * @param state\r\n   */\n  formulatext(ast, state) {\n    return this.runFunctionWithReferenceArgument(ast.args, state, this.metadata('FORMULATEXT'), () => new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber), cellReference => {\n      var _a;\n      return (_a = this.serialization.getCellFormula(cellReference)) !== null && _a !== void 0 ? _a : new CellError(ErrorType.NA, ErrorMessage.Formula);\n    });\n  }\n}\nFormulaTextPlugin.implementedFunctions = {\n  'FORMULATEXT': {\n    method: 'formulatext',\n    parameters: [{\n      argumentType: FunctionArgumentType.NOERROR\n    }],\n    doesNotNeedArgumentsToBeComputed: true,\n    isDependentOnSheetStructureChange: true,\n    vectorizationForbidden: true\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\nexport class CombinedTransformer {\n  constructor(sheet) {\n    this.sheet = sheet;\n    this.transformations = [];\n  }\n  add(transformation) {\n    this.transformations.push(transformation);\n  }\n  performEagerTransformations(graph, parser) {\n    this.transformations.forEach(transformation => transformation.performEagerTransformations(graph, parser));\n  }\n  transformSingleAst(ast, address) {\n    let [transformedAst, transformedAddress] = [ast, address];\n    this.transformations.forEach(transformation => {\n      [transformedAst, transformedAddress] = transformation.transformSingleAst(transformedAst, transformedAddress);\n    });\n    return [transformedAst, transformedAddress];\n  }\n  isIrreversible() {\n    return true;\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
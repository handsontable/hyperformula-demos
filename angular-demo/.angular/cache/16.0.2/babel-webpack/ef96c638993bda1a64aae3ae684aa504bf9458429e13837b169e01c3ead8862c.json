{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { ParserDefinitionErrorType } from \"../parser/parser\";\nimport { forEach, values } from \"../../utils/utils\";\nimport { GAstVisitor } from \"./gast/gast_visitor_public\";\nexport function resolveGrammar(topLevels, errMsgProvider) {\n  var refResolver = new GastRefResolverVisitor(topLevels, errMsgProvider);\n  refResolver.resolveRefs();\n  return refResolver.errors;\n}\nvar GastRefResolverVisitor = /** @class */function (_super) {\n  __extends(GastRefResolverVisitor, _super);\n  function GastRefResolverVisitor(nameToTopRule, errMsgProvider) {\n    var _this = _super.call(this) || this;\n    _this.nameToTopRule = nameToTopRule;\n    _this.errMsgProvider = errMsgProvider;\n    _this.errors = [];\n    return _this;\n  }\n  GastRefResolverVisitor.prototype.resolveRefs = function () {\n    var _this = this;\n    forEach(values(this.nameToTopRule), function (prod) {\n      _this.currTopLevel = prod;\n      prod.accept(_this);\n    });\n  };\n  GastRefResolverVisitor.prototype.visitNonTerminal = function (node) {\n    var ref = this.nameToTopRule[node.nonTerminalName];\n    if (!ref) {\n      var msg = this.errMsgProvider.buildRuleNotFoundError(this.currTopLevel, node);\n      this.errors.push({\n        message: msg,\n        type: ParserDefinitionErrorType.UNRESOLVED_SUBRULE_REF,\n        ruleName: this.currTopLevel.name,\n        unresolvedRefName: node.nonTerminalName\n      });\n    } else {\n      node.referencedRule = ref;\n    }\n  };\n  return GastRefResolverVisitor;\n}(GAstVisitor);\nexport { GastRefResolverVisitor };\n//# sourceMappingURL=resolver.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\nexport class LogarithmPlugin extends FunctionPlugin {\n  log10(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('LOG10'), Math.log10);\n  }\n  log(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('LOG'), (arg, base) => Math.log(arg) / Math.log(base));\n  }\n  ln(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('LN'), Math.log);\n  }\n}\nLogarithmPlugin.implementedFunctions = {\n  'LOG10': {\n    method: 'log10',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER\n    }]\n  },\n  'LOG': {\n    method: 'log',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      greaterThan: 0\n    }, {\n      argumentType: FunctionArgumentType.NUMBER,\n      defaultValue: 10,\n      greaterThan: 0\n    }]\n  },\n  'LN': {\n    method: 'ln',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER\n    }]\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
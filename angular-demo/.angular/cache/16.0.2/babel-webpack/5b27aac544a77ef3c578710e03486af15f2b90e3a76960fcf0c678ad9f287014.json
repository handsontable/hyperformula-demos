{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { RestWalker } from \"./rest\";\nimport { first } from \"./first\";\nimport { assign, forEach } from \"../../utils/utils\";\nimport { IN } from \"../constants\";\nimport { Flat } from \"./gast/gast_public\";\n// This ResyncFollowsWalker computes all of the follows required for RESYNC\n// (skipping reference production).\nvar ResyncFollowsWalker = /** @class */function (_super) {\n  __extends(ResyncFollowsWalker, _super);\n  function ResyncFollowsWalker(topProd) {\n    var _this = _super.call(this) || this;\n    _this.topProd = topProd;\n    _this.follows = {};\n    return _this;\n  }\n  ResyncFollowsWalker.prototype.startWalking = function () {\n    this.walk(this.topProd);\n    return this.follows;\n  };\n  ResyncFollowsWalker.prototype.walkTerminal = function (terminal, currRest, prevRest) {\n    // do nothing! just like in the public sector after 13:00\n  };\n  ResyncFollowsWalker.prototype.walkProdRef = function (refProd, currRest, prevRest) {\n    var followName = buildBetweenProdsFollowPrefix(refProd.referencedRule, refProd.idx) + this.topProd.name;\n    var fullRest = currRest.concat(prevRest);\n    var restProd = new Flat({\n      definition: fullRest\n    });\n    var t_in_topProd_follows = first(restProd);\n    this.follows[followName] = t_in_topProd_follows;\n  };\n  return ResyncFollowsWalker;\n}(RestWalker);\nexport { ResyncFollowsWalker };\nexport function computeAllProdsFollows(topProductions) {\n  var reSyncFollows = {};\n  forEach(topProductions, function (topProd) {\n    var currRefsFollow = new ResyncFollowsWalker(topProd).startWalking();\n    assign(reSyncFollows, currRefsFollow);\n  });\n  return reSyncFollows;\n}\nexport function buildBetweenProdsFollowPrefix(inner, occurenceInParent) {\n  return inner.name + occurenceInParent + IN;\n}\nexport function buildInProdFollowPrefix(terminal) {\n  var terminalName = terminal.terminalType.name;\n  return terminalName + terminal.idx + IN;\n}\n//# sourceMappingURL=follow.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\nimport { EmptyValue } from '../InterpreterValue';\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\n/**\r\n * Interpreter plugin containing MEDIAN function\r\n */\nexport class CountBlankPlugin extends FunctionPlugin {\n  countblank(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('COUNTBLANK'), (...args) => {\n      let counter = 0;\n      args.forEach(arg => {\n        if (arg === EmptyValue) {\n          counter++;\n        }\n      });\n      return counter;\n    });\n  }\n}\nCountBlankPlugin.implementedFunctions = {\n  'COUNTBLANK': {\n    method: 'countblank',\n    parameters: [{\n      argumentType: FunctionArgumentType.SCALAR\n    }],\n    repeatLastArgs: 1,\n    expandRanges: true\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
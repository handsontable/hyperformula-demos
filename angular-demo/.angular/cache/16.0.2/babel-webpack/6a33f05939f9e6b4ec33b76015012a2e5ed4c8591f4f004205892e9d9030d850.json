{"ast":null,"code":"/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\nimport { FunctionArgumentType, FunctionPlugin } from './FunctionPlugin';\nexport const PI = parseFloat(Math.PI.toFixed(14));\nexport class MathConstantsPlugin extends FunctionPlugin {\n  pi(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('PI'), () => PI);\n  }\n  sqrtpi(ast, state) {\n    return this.runFunction(ast.args, state, this.metadata('SQRTPI'), arg => Math.sqrt(PI * arg));\n  }\n}\nMathConstantsPlugin.implementedFunctions = {\n  'PI': {\n    method: 'pi',\n    parameters: []\n  },\n  'SQRTPI': {\n    method: 'sqrtpi',\n    parameters: [{\n      argumentType: FunctionArgumentType.NUMBER,\n      minValue: 0\n    }]\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
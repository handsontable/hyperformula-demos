{"ast":null,"code":"/**\r\n * @license\r\n * Copyright (c) 2023 Handsoncode. All rights reserved.\r\n */\n/**\r\n * This is a class for detailed error messages across HyperFormula.\r\n */\nexport let ErrorMessage = /*#__PURE__*/(() => {\n  class ErrorMessage {}\n  ErrorMessage.DistinctSigns = 'Distinct signs.';\n  ErrorMessage.WrongArgNumber = 'Wrong number of arguments.';\n  ErrorMessage.EmptyArg = 'Empty function argument.';\n  ErrorMessage.EmptyArray = 'Empty array not allowed.';\n  ErrorMessage.ArrayDimensions = 'Array dimensions are not compatible.';\n  ErrorMessage.NoSpaceForArrayResult = 'No space for array result.';\n  ErrorMessage.ValueSmall = 'Value too small.';\n  ErrorMessage.ValueLarge = 'Value too large.';\n  ErrorMessage.BadCriterion = 'Incorrect criterion.';\n  ErrorMessage.RangeManySheets = 'Range spans more than one sheet.';\n  ErrorMessage.CellRangeExpected = 'Cell range expected.';\n  ErrorMessage.WrongDimension = 'Wrong range dimension.';\n  ErrorMessage.ScalarExpected = 'Cell range not allowed.';\n  ErrorMessage.NumberCoercion = 'Value cannot be coerced to number.';\n  ErrorMessage.NumberExpected = 'Number argument expected.';\n  ErrorMessage.IntegerExpected = 'Value needs to be an integer.';\n  ErrorMessage.BadMode = 'Mode not recognized.';\n  ErrorMessage.DateBounds = 'Date outside of bounds.';\n  ErrorMessage.OutOfSheet = 'Resulting reference is out of the sheet.';\n  ErrorMessage.WrongType = 'Wrong type of argument.';\n  ErrorMessage.NaN = 'NaN or infinite value encountered.';\n  ErrorMessage.EqualLength = 'Ranges need to be of equal length.';\n  ErrorMessage.Negative = 'Value cannot be negative.';\n  ErrorMessage.NotBinary = 'String does not represent a binary number.';\n  ErrorMessage.NotOctal = 'String does not represent an octal number.';\n  ErrorMessage.NotHex = 'String does not represent a hexadecimal number.';\n  ErrorMessage.EndStartPeriod = 'End period needs to be at least start period.';\n  ErrorMessage.CellRefExpected = 'Cell reference expected.';\n  ErrorMessage.EmptyRange = 'Empty range not allowed.';\n  ErrorMessage.BadRef = 'Address is not correct.';\n  ErrorMessage.NumberRange = 'Number-only range expected.';\n  ErrorMessage.ValueNotFound = 'Value not found.';\n  ErrorMessage.ValueBaseLarge = 'Value in base too large.';\n  ErrorMessage.ValueBaseSmall = 'Value in base too small.';\n  ErrorMessage.ValueBaseLong = 'Value in base too long.';\n  ErrorMessage.NegativeLength = 'Length cannot be negative.';\n  ErrorMessage.PatternNotFound = 'Pattern not found.';\n  ErrorMessage.OneValue = 'Needs at least one value.';\n  ErrorMessage.TwoValues = 'Range needs to contain at least two elements.';\n  ErrorMessage.ThreeValues = 'Range needs to contain at least three elements.';\n  ErrorMessage.IndexBounds = 'Index out of bounds.';\n  ErrorMessage.IndexLarge = 'Index too large.';\n  ErrorMessage.Formula = 'Expected formula.';\n  ErrorMessage.NegativeCount = 'Count cannot be negative.';\n  ErrorMessage.ParseError = 'Parsing error.';\n  ErrorMessage.SheetRef = 'Sheet does not exist.';\n  ErrorMessage.PeriodLong = 'Period number cannot exceed life length.';\n  ErrorMessage.InvalidDate = 'Invalid date.';\n  ErrorMessage.BitshiftLong = 'Result of bitshift is too long.';\n  ErrorMessage.EmptyString = 'Empty-string argument not allowed.';\n  ErrorMessage.LengthBounds = 'Length out of bounds.';\n  ErrorMessage.NegativeTime = 'Time cannot be negative.';\n  ErrorMessage.NoDefault = 'No default option.';\n  ErrorMessage.Selector = 'Selector cannot exceed the number of arguments.';\n  ErrorMessage.StartEndDate = 'Start date needs to be earlier than end date.';\n  ErrorMessage.IncorrectDateTime = 'String does not represent correct DateTime.';\n  ErrorMessage.CharacterCodeBounds = 'Character code out of bounds.';\n  ErrorMessage.NonZero = 'Argument cannot be 0.';\n  ErrorMessage.LessThanOne = 'Argument cannot be less than 1.';\n  ErrorMessage.WeekendString = 'Incorrect weekend bitmask string.';\n  ErrorMessage.InvalidRoman = 'Invalid roman numeral.';\n  ErrorMessage.WrongOrder = 'Wrong order of values.';\n  ErrorMessage.ComplexNumberExpected = 'Complex number expected.';\n  ErrorMessage.ShouldBeIorJ = 'Should be \\'i\\' or \\'j\\'.';\n  ErrorMessage.SizeMismatch = 'Array dimensions mismatched.';\n  ErrorMessage.FunctionName = arg => `Function name ${arg} not recognized.`;\n  ErrorMessage.NamedExpressionName = arg => `Named expression ${arg} not recognized.`;\n  ErrorMessage.LicenseKey = arg => `License key is ${arg}.`;\n  return ErrorMessage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}